[gd_scene load_steps=5 format=2]

[ext_resource path="res://Scenes/Partials/Environment/Wind.shader" type="Shader" id=1]
[ext_resource path="res://Graphics/Environment/wind.png" type="Texture" id=2]

[sub_resource type="GDScript" id=1]
script/source = "tool
extends Area2D

export(Vector2) var windVector = Vector2(0.5,0) setget set_wind_vector;
export(Color)  var baseColor = Color(0.054902, 0.270588, 0.458824, 0.286275) setget set_base_color

# Called when the node enters the scene tree for the first time.
func _ready():
	update_wind();
	self.gravity_vec = windVector;
	self.connect(\"item_rect_changed\",self,\"update_fire\");

func update_wind():
	var prevPoly = self.find_node(\"WindAreaPolygon\");
	if  prevPoly:
		self.remove_child(prevPoly)

	var placeholderPoly = prevPoly if prevPoly else  $Placeholders.find_node(\"PlaceholderPolygon\").duplicate() ;
	placeholderPoly.name = \"WindAreaPolygon\";
	placeholderPoly.set_position( Vector2(0,0) );
	self.add_child(placeholderPoly);

	#if is_inside_tree() && Engine.is_editor_hint():
	placeholderPoly.set_owner(self.get_owner())
	$VisualPoly.polygon = placeholderPoly.polygon

	update()

func set_wind_vector(value):
	windVector = value;
	if self.find_node(\"VisualPoly\"):
		self.find_node(\"VisualPoly\").material.set_shader_param('windVector',windVector);
	self.gravity_vec = windVector;

func set_base_color(value):
	baseColor = value;
	if self.find_node(\"VisualPoly\"):
		self.find_node(\"VisualPoly\").material.set_shader_param('baseColor',baseColor);
"

[sub_resource type="ShaderMaterial" id=2]
render_priority = 2
shader = ExtResource( 1 )
shader_param/gustFactor = 2.0
shader_param/baseColor = Color( 0.556863, 0.819608, 1, 0.160784 )
shader_param/windVector = Vector2( 6.69, 0 )
shader_param/windTex = ExtResource( 2 )
shader_param/gustTex = ExtResource( 2 )

[node name="Wind" type="Area2D"]
z_index = 1
z_as_relative = false
space_override = 1
gravity_vec = Vector2( 0.5, 0 )
gravity = 1.0
script = SubResource( 1 )

[node name="Placeholders" type="Node" parent="."]

[node name="PlaceholderPolygon" type="CollisionPolygon2D" parent="Placeholders"]
visible = false
polygon = PoolVector2Array( 0, 0, 100, 0, 100, 100, 0, 100 )

[node name="VisualPoly" type="Polygon2D" parent="."]
material = SubResource( 2 )
position = Vector2( 0, -1.43198 )
polygon = PoolVector2Array( 0, 0, 100, 0, 100, 100, 0, 100 )
