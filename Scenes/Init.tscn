[gd_scene load_steps=3 format=2]

[ext_resource path="res://Scenes/loader.tscn" type="PackedScene" id=1]

[sub_resource type="GDScript" id=1]

script/source = "extends Container

# class member variables go here, for example:
# var a = 2
var thread = Thread.new();
export(Array) var scenes = [];
export(String) var startScenePath = \"\";
var startScene = null;
var progressBar = null;

func _ready():
	Physics2DServer.set_active(false);	
	get_node(\"LoadingScreen\").connect(\"faded_out\",self,\"switchToStartScene\");
	progressBar = get_node(\"LoadingScreen/CenterContainer/ProgressBar\");
	thread.start(self,\"load_scenes\")

func load_scenes(value):
	var progressStep = 1/scenes.size()*100;
	
	for scenePath in scenes:
		var scene = self.load_scene(scenePath);
		if( scenePath == startScenePath):
			self.startScene = scene;
		progressBar.set_value( progressBar.get_value() + progressStep );

func load_scene(scenePath):
	print(scenePath)
	var scene = ResourceLoader.load(scenePath);
	return scene.instance();

func switchToStartScene():
	get_node(\"LoadingScreen\").hide();
	if(self.startScene):
		 get_tree().get_root().add_child(self.startScene);
		 Physics2DServer.set_active(true);
	else:
		print(\"No start scene found\");
"
_sections_unfolded = [ "Resource" ]

[node name="Init" type="Container"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_bottom = -1.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
script = SubResource( 1 )
_sections_unfolded = [ "Anchor" ]
scenes = [ "res://Scenes/Levels/test_level.scn" ]
startScenePath = "res://Scenes/Levels/test_level.scn"

[node name="LoadingScreen" parent="." index="0" instance=ExtResource( 1 )]

margin_bottom = -1.0


